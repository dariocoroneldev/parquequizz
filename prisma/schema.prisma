generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quizz {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String    @db.VarChar(255)
  content   String?
  published Boolean   @default(false)
  results   Result[]
  questions Questions[]
}

model Questions {
  id        Int      @id @default(autoincrement())
  question  String   @db.VarChar(255)
  answer    String
  options   String[]
  image     String   @default("")
  quizz     Quizz    @relation(fields: [quizzId], references: [id])
  quizzId   Int
  answers   Answer[]
}

model Lead {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  lastname  String    @db.VarChar(255)
  email     String    @unique
  phone     String    @unique
  location  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  results   Result[]
  answers   Answer[]
  surveyAnswers SurveyAnswer[]
}

model Result {
  id        Int       @id @default(autoincrement())
  score     Int
  completedAt DateTime @default(now())
  lead      Lead      @relation(fields: [leadId], references: [id])
  leadId    Int
  quizz     Quizz     @relation(fields: [quizzId], references: [id])
  quizzId   Int
  answers   Answer[]
  time      String
}

model Answer {
  id        Int       @id @default(autoincrement())
  response  String
  isCorrect Boolean
  lead      Lead      @relation(fields: [leadId], references: [id])
  leadId    Int
  question  Questions @relation(fields: [questionId], references: [id])
  questionId Int
  result    Result    @relation(fields: [resultId], references: [id])
  resultId  Int
}

model SurveyItem {
  id         Int              @id @default(autoincrement())
  prompt     String           // Pregunta de la encuesta
  type       String           // Tipo de pregunta: "star-rating", "multiple-choice", "text"
  options    String[]         // Opciones para preguntas de selección múltiple
  maxStars   Int?             // Número máximo de estrellas para preguntas de calificación

  // Relación con las respuestas
  responses  SurveyAnswer[]
}

model SurveyAnswer {
  id          Int         @id @default(autoincrement())
  surveyItem  SurveyItem  @relation(fields: [surveyItemId], references: [id])
  surveyItemId Int        // ID de la pregunta a la que esta respuesta pertenece
  answer      String      // Respuesta como texto (puede almacenar números, opciones o texto)

  // Relación con Lead para identificar quién respondió
  lead       Lead?         @relation(fields: [leadId], references: [id])
  leadId     Int?          // ID del Lead que respondió esta pregunta

  // Timestamps para seguimiento
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}